{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/fronted/src/views/cases/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/src/views/cases/index.vue","mtime":1663055637840},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHByb2plY3RMaXN0IH0gZnJvbSAnQC9hcGkvcHJvamVjdHMnCmltcG9ydCB7IGdldFByb2plY3RGaWxlcywgc3luY1Byb2plY3RDYXNlLCBnZXRQcm9qZWN0Q2FzZXMsIGdldFByb2plY3RTdWJkaXJlY3RvcnksIHJ1bm5pbmdDYXNlIH0gZnJvbSAnQC9hcGkvY2FzZXMnCmltcG9ydCB7IGdldEVudnMgfSBmcm9tICdAL2FwaS9ldm5zJwppbXBvcnQgZW52RGlhbG9nIGZyb20gJy4vY29tcG9uZW50cy9lbnZEaWFsb2cudnVlJwppbXBvcnQgcmVzdWx0RGlhbG9nIGZyb20gJy4vY29tcG9uZW50cy9yZXN1bHREaWFsb2cudnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDYXNlTW9kdWxlJywKICBjb21wb25lbnRzOiB7CiAgICBlbnZEaWFsb2csCiAgICByZXN1bHREaWFsb2cKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaWFsb2dGbGFnOiBmYWxzZSwKICAgICAgZGlhbG9nVGl0bGU6ICdjcmVhdGUnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICBwcm9qZWN0VmFsdWU6IDEsCiAgICAgIHByb2plY3RMYWJlbDogJycsCiAgICAgIHByb2plY3RPcHRpb246IFtdLAogICAgICBjYXNlSWQ6ICcnLAogICAgICBjYXNlTnVtYmVyOiAwLAogICAgICBmdWxsTmFtZTogJycsCiAgICAgIGZpbGVEYXRhOiBbXSwKICAgICAgY2FzZURhdGE6IFtdLAogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ2xhYmVsJwogICAgICB9LAogICAgICBlbnY6ICcnLAogICAgICBlbnZPcHRpb25zOiBbXSwKICAgICAgZHJhd2VyOiBmYWxzZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdFByb2plY3RMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIneWni+WMlumhueebruWIl+ihqAogICAgYXN5bmMgaW5pdFByb2plY3RMaXN0KCkgewogICAgICBjb25zdCByZXNwID0gYXdhaXQgcHJvamVjdExpc3QodGhpcy5yZXEpCiAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICB0aGlzLnByb2plY3RWYWx1ZSA9IHJlc3AuaXRlbXNbMF0uaWQKICAgICAgICB0aGlzLnByb2plY3RMYWJlbCA9IHJlc3AuaXRlbXNbMF0ubmFtZQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzcC5pdGVtcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgdGhpcy5wcm9qZWN0T3B0aW9uLnB1c2goewogICAgICAgICAgICB2YWx1ZTogcmVzcC5pdGVtc1tpXS5pZCwKICAgICAgICAgICAgbGFiZWw6IHJlc3AuaXRlbXNbaV0ubmFtZQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgdGhpcy5pbml0UHJvamVjdEZpbGUoKQogICAgICAgIHRoaXMuaW5pdEVudih0aGlzLnByb2plY3RWYWx1ZSkKICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuafpeivouaIkOWKn++8gSIpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5p+l6K+i5aSx6LSl77yBJykKICAgICAgfQogICAgfSwKCiAgICAvLyDliJ3lp4vljJbpobnnm67mlofku7bliJfooagKICAgIGFzeW5jIGluaXRQcm9qZWN0RmlsZSgpIHsKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGdldFByb2plY3RGaWxlcyh0aGlzLnByb2plY3RWYWx1ZSkKICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMuZmlsZURhdGEgPSByZXNwLmRhdGEuZmlsZXMKICAgICAgICB0aGlzLmNhc2VOdW1iZXIgPSByZXNwLmRhdGEuY2FzZV9udW1iZXIKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgfQogICAgfSwKCiAgICAvLyDliJ3lp4vljJbnjq/looPliJfooagKICAgIGFzeW5jIGluaXRFbnYocGlkKSB7CiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBnZXRFbnZzKHBpZCkKICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgIC8vIOi/m+ihjHB1c2jliY3ph43nva4gZW52T3B0aW9ucyDlhoXlrrkKICAgICAgICB0aGlzLmVudk9wdGlvbnMgPSBbXQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzcC5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLmVudk9wdGlvbnMucHVzaCh7CiAgICAgICAgICAgIHZhbHVlOiByZXNwLmRhdGFbaV0uaWQsCiAgICAgICAgICAgIGxhYmVsOiByZXNwLmRhdGFbaV0ubmFtZQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1lc3NhZ2UpCiAgICAgIH0KICAgIH0sCgogICAgY2hhbmdlUHJvamVjdCgpIHsKICAgICAgdGhpcy5pbml0UHJvamVjdEZpbGUoKQogICAgICB0aGlzLmluaXRFbnYodGhpcy5wcm9qZWN0VmFsdWUpCiAgICB9LAoKICAgIC8vIOWQjOatpemhueebrueUqOS+iwogICAgYXN5bmMgc3luY1Byb2plY3QoKSB7CiAgICAgIGlmICh0aGlzLnByb2plY3RJZCA9PT0gJycpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fpgInmi6npobnnm64nKQogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBzeW5jUHJvamVjdENhc2UodGhpcy5wcm9qZWN0VmFsdWUpCiAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICB0aGlzLmluaXRQcm9qZWN0RmlsZSgpCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflkIzmraXmiJDlip8nKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICB9CiAgICB9LAoKICAgIC8vIOiOt+W+l+aWh+S7tueUqOS+iwogICAgaW5pdEZpbGVDYXNlcygpIHsKICAgICAgY29uc3QgcmVxID0geyBmaWxlX25hbWU6IHRoaXMuZnVsbE5hbWUgfQogICAgICBnZXRQcm9qZWN0Q2FzZXModGhpcy5wcm9qZWN0VmFsdWUsIHJlcSkudGhlbihyZXNwID0+IHsKICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+iOt+WPlueUqOS+i+WIl+ihqOaIkOWKnycpCiAgICAgICAgICB0aGlzLmNhc2VEYXRhID0gcmVzcC5kYXRhCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCgogICAgLy8g54K55Ye7dHJlZeiKgueCuQogICAgaGFuZGxlTm9kZUNsaWNrKGRhdGEpIHsKICAgICAgLy8g5aaC5p6c5piv5paH5Lu26L+U5ZueIOexuybmlrnms5UKICAgICAgaWYgKGRhdGEubGFiZWwubWF0Y2goJy5weScpKSB7CiAgICAgICAgdGhpcy5mdWxsTmFtZSA9IGRhdGEuZnVsbF9uYW1lCiAgICAgICAgdGhpcy5pbml0RmlsZUNhc2VzKCkKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDlpoLmnpznm67lvZXov5Tlm57kuIvkuIDnuqcg55uu5b2VJuaWh+S7tgogICAgICAgIGlmIChkYXRhLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgIC8vIOS4i+S4gOe6p+S4jeS4uuepuu+8jOebtOaOpei/lOWbngogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlcSA9IHsgZmlsZV9uYW1lOiBkYXRhLmZ1bGxfbmFtZSB9CiAgICAgICAgZ2V0UHJvamVjdFN1YmRpcmVjdG9yeSh0aGlzLnByb2plY3RWYWx1ZSwgcmVxKS50aGVuKHJlc3AgPT4gewogICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICBkYXRhLmNoaWxkcmVuID0gcmVzcC5kYXRhCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9LAogICAgY2FzZVJvd0NsaWNrKHJvdykgewogICAgICB0aGlzLmNhc2VJZCA9IHJvdy5pZAogICAgICB0aGlzLmRyYXdlciA9IHRydWUKICAgIH0sCiAgICAvLyDlsZXnpLrlrZDnu4Tku7YKICAgIHNob3dEaWFsb2coKSB7CiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAnY3JlYXRlJwogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSB0cnVlCiAgICB9LAogICAgLy8g5YWz6Zet5a2Q57uE5Lu277yM5a2Q57uE5Lu255qEY2xvc2VEaWFsb2flm57osIPniLbnu4Tku7YKICAgIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSBmYWxzZQogICAgICB0aGlzLmluaXRFbnYodGhpcy5wcm9qZWN0VmFsdWUpCiAgICAgIHRoaXMuaW5pdFByb2plY3RGaWxlKCkKICAgIH0sCiAgICAvLyDov5DooYznlKjkvosKICAgIGFzeW5jIHJ1bkNhc2Uocm93KSB7CiAgICAgIGlmICh0aGlzLmVudiA9PT0gJycpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fpgInmi6nov5DooYznjq/looMnKQogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBydW5uaW5nQ2FzZShyb3cuaWQsIHsgZW52OiB0aGlzLmVudiB9KQogICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflvIDlp4vmiafooYwnKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+i/kOihjOWksei0pScpCiAgICAgIH0KICAgIH0sCiAgICAvLyDmiZPlvIDmiqXlkYoKICAgIG9wZW5SZXBvcnQocm93KSB7CiAgICAgIHdpbmRvdy5vcGVuKCcvcmVwb3J0cy8nICsgcm93LnJlcG9ydCkKICAgIH0sCiAgICAvLyDlrZDnu4Tku7bnmoTlm57osIMKICAgIGNhbmNlbERpYWxvZygpIHsKICAgICAgdGhpcy5kcmF3ZXIgPSBmYWxzZQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/cases","sourcesContent":["<template>\n  <div class=\"case\">\n    <div style=\"text-align: left; margin-top: 20px;\">\n      <el-form :inline=\"true\">\n        <el-form-item label=\"项目\">\n          <el-select\n            v-model=\"projectValue\"\n            size=\"medium\"\n            placeholder=\"请选择项目\"\n            @change=\"changeProject()\"\n          >\n            <el-option\n              v-for=\"(item, index) in projectOption\"\n              :key=\"index\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" size=\"small\" @click=\"syncProject\">同步</el-button>\n        </el-form-item>\n        <el-form-item label=\"用例\" style=\"float: right;\">\n          <el-tag>{{ caseNumber }}</el-tag> 条\n        </el-form-item>\n        <el-form-item label=\"环境\" style=\"float: right;\">\n          <el-select v-model=\"env\" placeholder=\"请选择执行环境\" size=\"small\">\n            <el-option\n              v-for=\"item in envOptions\"\n              :key=\"item.vaule\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item style=\"float: right;\">\n          <el-button type=\"primary\" size=\"small\" @click=\"showDialog()\">创建环境</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div style=\"height: 60px; margin-top: 10px;\">\n      <span> 用例列表</span>\n      <span style=\"float: right\">\n        <el-button v-if=\"fullName != ''\" type=\"success\" size=\"mini\" @click=\"initFileCases()\">刷新</el-button>\n      </span>\n    </div>\n    <div style=\"min-height: 650px;\">\n      <div class=\"case-dir-tree\">\n        <div style=\"width: 100%; height: 600px;\">\n          <el-scrollbar style=\"height:100%\">\n            <el-tree\n              ref=\"tree\"\n              :data=\"fileData\"\n              node-key=\"id\"\n              lazy\n              :props=\"defaultProps\"\n              @node-expand=\"handleNodeClick\"\n            >\n              <span slot-scope=\"{ node, data }\">\n                <span v-if=\"data.is_leaf === 1\">\n                  <i class=\"el-icon-tickets\" />\n                </span>\n                <span v-else>\n                  <i class=\"el-icon-folder\" />\n                </span>\n                {{ data.label }}\n              </span>\n            </el-tree>\n          </el-scrollbar>\n        </div>\n      </div>\n      <div style=\"width: 78%; float: right\">\n        <el-table :data=\"caseData\" border style=\"width: 100%\" height=\"650\" @row-click=\"caseRowClick\">\n          <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n          <el-table-column prop=\"class_name\" label=\"测试类\" />\n          <el-table-column prop=\"class_doc\" label=\"测试类描述\" />\n          <el-table-column prop=\"case_name\" label=\"测试方法\" />\n          <el-table-column prop=\"case_doc\" label=\"测试方法描述\" />\n          <el-table-column prop=\"status\" label=\"状态\">\n            <template slot-scope=\"scope\">\n              <span v-if=\"scope.row.status === 0\">\n                <el-tag type=\"info\"> 未执行 </el-tag>\n              </span>\n              <span v-else-if=\"scope.row.status === 1\">\n                <el-tag type=\"success\"> 执行中 </el-tag>\n              </span>\n              <span v-else-if=\"scope.row.status === 2\">\n                <el-tag> 已执行 </el-tag>\n              </span>\n              <span v-else>\n                <el-tag type=\"danger\"> 未知 </el-tag>\n              </span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"success\" size=\"mini\" @click=\"runCase(scope.row)\" @click.stop=\"drawer = false\">执行</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </div>\n    <!--引入子组件-->\n    <env-dialog v-if=\"dialogFlag\" :title=\"dialogTitle\" :pid=\"projectValue\" @cancel=\"closeDialog\" />\n\n    <el-drawer\n      title=\"测试结果\"\n      :visible.sync=\"drawer\"\n      direction=\"rtl\"\n      size=\"40%\"\n    >\n      <result-dialog v-if=\"drawer\" :cid=\"caseId\" @cancel=\"cancelDialog\" />\n    </el-drawer>\n  </div>\n</template>\n<script>\nimport { projectList } from '@/api/projects'\nimport { getProjectFiles, syncProjectCase, getProjectCases, getProjectSubdirectory, runningCase } from '@/api/cases'\nimport { getEnvs } from '@/api/evns'\nimport envDialog from './components/envDialog.vue'\nimport resultDialog from './components/resultDialog.vue'\n\nexport default {\n  name: 'CaseModule',\n  components: {\n    envDialog,\n    resultDialog\n  },\n  data() {\n    return {\n      dialogFlag: false,\n      dialogTitle: 'create',\n      loading: true,\n      projectValue: 1,\n      projectLabel: '',\n      projectOption: [],\n      caseId: '',\n      caseNumber: 0,\n      fullName: '',\n      fileData: [],\n      caseData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      env: '',\n      envOptions: [],\n      drawer: false\n    }\n  },\n  mounted() {\n    this.initProjectList()\n  },\n  methods: {\n    // 初始化项目列表\n    async initProjectList() {\n      const resp = await projectList(this.req)\n      if (resp.success === true) {\n        this.projectValue = resp.items[0].id\n        this.projectLabel = resp.items[0].name\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        this.initProjectFile()\n        this.initEnv(this.projectValue)\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n\n    // 初始化项目文件列表\n    async initProjectFile() {\n      const resp = await getProjectFiles(this.projectValue)\n      if (resp.success === true) {\n        this.fileData = resp.data.files\n        this.caseNumber = resp.data.case_number\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n\n    // 初始化环境列表\n    async initEnv(pid) {\n      const resp = await getEnvs(pid)\n      if (resp.success === true) {\n        // 进行push前重置 envOptions 内容\n        this.envOptions = []\n        for (let i = 0; i < resp.data.length; i++) {\n          this.envOptions.push({\n            value: resp.data[i].id,\n            label: resp.data[i].name\n          })\n        }\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n\n    changeProject() {\n      this.initProjectFile()\n      this.initEnv(this.projectValue)\n    },\n\n    // 同步项目用例\n    async syncProject() {\n      if (this.projectId === '') {\n        this.$message.error('请选择项目')\n        return\n      }\n      const resp = await syncProjectCase(this.projectValue)\n      if (resp.success === true) {\n        this.initProjectFile()\n        this.$message.success('同步成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n\n    // 获得文件用例\n    initFileCases() {\n      const req = { file_name: this.fullName }\n      getProjectCases(this.projectValue, req).then(resp => {\n        if (resp.success === true) {\n          // this.$message.success('获取用例列表成功')\n          this.caseData = resp.data\n        } else {\n          this.$message.error(resp.error.message)\n        }\n      })\n    },\n\n    // 点击tree节点\n    handleNodeClick(data) {\n      // 如果是文件返回 类&方法\n      if (data.label.match('.py')) {\n        this.fullName = data.full_name\n        this.initFileCases()\n      } else {\n        // 如果目录返回下一级 目录&文件\n        if (data.children.length > 0) {\n          // 下一级不为空，直接返回\n          return\n        }\n        const req = { file_name: data.full_name }\n        getProjectSubdirectory(this.projectValue, req).then(resp => {\n          if (resp.success === true) {\n            data.children = resp.data\n          } else {\n            this.$message.error(resp.error.message)\n          }\n        })\n      }\n    },\n    caseRowClick(row) {\n      this.caseId = row.id\n      this.drawer = true\n    },\n    // 展示子组件\n    showDialog() {\n      this.dialogTitle = 'create'\n      this.dialogFlag = true\n    },\n    // 关闭子组件，子组件的closeDialog回调父组件\n    closeDialog() {\n      this.dialogFlag = false\n      this.initEnv(this.projectValue)\n      this.initProjectFile()\n    },\n    // 运行用例\n    async runCase(row) {\n      if (this.env === '') {\n        this.$message.error('请选择运行环境')\n        return\n      }\n      const resp = await runningCase(row.id, { env: this.env })\n      if (resp.success === true) {\n        this.$message.success('开始执行')\n      } else {\n        this.$message.error('运行失败')\n      }\n    },\n    // 打开报告\n    openReport(row) {\n      window.open('/reports/' + row.report)\n    },\n    // 子组件的回调\n    cancelDialog() {\n      this.drawer = false\n    }\n  }\n}\n</script>\n  <style scoped>\n  .custom-tree-node {\n    width: 100%;\n  }\n  .el-card-define {\n    height: 720px;\n  }\n  /* 定义当前组件使用的CSS */\n.case-dir-tree {\n  width: 21%;\n  float: left;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\n}\n  </style>\n"]}]}