{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/thread-loader/dist/cjs.js!/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/components/projectDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/components/projectDialog.vue","mtime":1660982573326},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/babel.config.js","mtime":1660724590681},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/thread-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}