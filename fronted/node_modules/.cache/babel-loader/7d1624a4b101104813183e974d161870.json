{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/test-framework-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/front/src/views/project/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/front/src/views/project/index.vue","mtime":1660982791419},{"path":"/Users/lvjing/web-project/test-framework-platform/front/babel.config.js","mtime":1660724590681},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2x2amluZy93ZWItcHJvamVjdC90ZXN0LWZyYW1ld29yay1wbGF0Zm9ybS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9sdmppbmcvd2ViLXByb2plY3QvdGVzdC1mcmFtZXdvcmstcGxhdGZvcm0vZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUHJvamVjdERpYWxvZyBmcm9tICcuL2NvbXBvbmVudHMvcHJvamVjdERpYWxvZy52dWUnOwppbXBvcnQgeyBwcm9qZWN0TGlzdCwgZGVsZXRlUHJvamVjdCBhcyBfZGVsZXRlUHJvamVjdCwgY2xvbmVQcm9qZWN0IGFzIF9jbG9uZVByb2plY3QgfSBmcm9tICdAL2FwaS9wcm9qZWN0cyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9yamVjdCcsCiAgY29tcG9uZW50czogewogICAgUHJvamVjdERpYWxvZzogUHJvamVjdERpYWxvZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZ0ZsYWc6IGZhbHNlLAogICAgICBkaWFsb2dUaXRsZTogJ2NyZWF0ZScsCiAgICAgIGN1cnJlbnRQb3JqZWN0SWQ6IDAsCiAgICAgIHByb2plY3REYXRhOiBbXSwKICAgICAgcmVxOiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBzaXplOiA2CiAgICAgIH0sCiAgICAgIC8vIOWIhumhtemhteaVsAogICAgICB0b3RhbDogMTAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8g57uE5Lu25Yqg6L2955qE5pe25YCZIOi/m+ihjOiwg+eUqAogICAgdGhpcy5pbml0UHJvamVjdExpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRQcm9qZWN0TGlzdDogZnVuY3Rpb24gaW5pdFByb2plY3RMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcCwgaTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBwcm9qZWN0TGlzdChfdGhpcy5yZXEpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgIC8vIOWkhOeQhuWKoOi9veeahOWbvueJh+i3r+W+hAogICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcmVzcC5pdGVtcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgIHJlc3AuaXRlbXNbaV0uaW1hZ2UgPSAnL3N0YXRpYy9pbWFnZXMvJyArIHJlc3AuaXRlbXNbaV0uaW1hZ2U7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF90aGlzLnByb2plY3REYXRhID0gcmVzcC5pdGVtczsKICAgICAgICAgICAgICAgICAgX3RoaXMudG90YWwgPSByZXNwLnRvdGFsOyAvLyB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+afpeivouaIkOWKn++8gScpCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcign5p+l6K+i5aSx6LSl77yBJyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDlsZXnpLrlrZDnu4Tku7YKICAgIHNob3dEaWFsb2c6IGZ1bmN0aW9uIHNob3dEaWFsb2coKSB7CiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAnY3JlYXRlJzsKICAgICAgdGhpcy5kaWFsb2dGbGFnID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDlhbPpl63lrZDnu4Tku7bvvIzlrZDnu4Tku7bnmoRjbG9zZURpYWxvZ+Wbnuiwg+eItue7hOS7tgogICAgY2xvc2VEaWFsb2c6IGZ1bmN0aW9uIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSBmYWxzZTsKICAgICAgdGhpcy5pbml0UHJvamVjdExpc3QoKTsKICAgIH0sCiAgICAvLyDot7PovazliLDnrKzlh6DpobUKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKGDlvZPliY3pobU6ICR7dmFsfWApCiAgICAgIHRoaXMucmVxLnBhZ2UgPSB2YWw7CiAgICAgIHRoaXMuaW5pdFByb2plY3RMaXN0KCk7CiAgICB9LAogICAgLy8g5bGV56S66aG555uu6K+m5oOFCiAgICBzaG93RGV0YWlsOiBmdW5jdGlvbiBzaG93RGV0YWlsKGlkKSB7CiAgICAgIHRoaXMuY3VycmVudFBvcmplY3RJZCA9IGlkOwogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ2RldGFpbCc7CiAgICAgIHRoaXMuZGlhbG9nRmxhZyA9IHRydWU7CiAgICB9LAogICAgLy8g57yW6L6R6aG555uuCiAgICBzaG93RWRpdDogZnVuY3Rpb24gc2hvd0VkaXQoaWQpIHsKICAgICAgdGhpcy5jdXJyZW50UG9yamVjdElkID0gaWQ7CiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAnZWRpdCc7CiAgICAgIHRoaXMuZGlhbG9nRmxhZyA9IHRydWU7CiAgICB9LAogICAgLy8g5YWL6ZqG6aG555uuCiAgICBjbG9uZVByb2plY3Q6IGZ1bmN0aW9uIGNsb25lUHJvamVjdChpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX2Nsb25lUHJvamVjdChpZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbygn5YWL6ZqG6aG555uuJyk7CgogICAgICAgICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu5YWL6ZqG5oiQ5Yqf77yBJyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+mhueebruWFi+mahuWksei0pe+8gScpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDliKDpmaTpobnnm64KICAgIGRlbGV0ZVByb2plY3Q6IGZ1bmN0aW9uIGRlbGV0ZVByb2plY3QoaWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF9kZWxldGVQcm9qZWN0KGlkKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMy4kY29uZmlybSgn5Yig6Zmk5Lu75YqhLCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsKICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgICAgICAgICAgICAgIGNlbnRlcjogdHJ1ZQogICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuaW5pdFByb2plY3RMaXN0KCk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1zZyk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2luZm8nLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+W3suWPlua2iOWIoOmZpCcKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AAEA;EACAA,eADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,iBADA;MAEAC,qBAFA;MAGAC,mBAHA;MAIAC,eAJA;MAKAC;QACAC,OADA;QAEAC;MAFA,CALA;MASA;MACAC;IAVA;EAYA,CAlBA;EAmBAC,OAnBA,qBAmBA;IACA;IACA;EACA,CAtBA;EAuBAC;IACAC,eADA,6BACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,sBADA;;cAAA;gBACAC,IADA;;gBAEA;kBACA;kBACA;oBACAA;kBACA;;kBACA;kBACA,yBANA,CAOA;gBACA,CARA,MAQA;kBACA;gBACA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAdA;IAeA;IACAC,UAhBA,wBAgBA;MACA;MACA;IACA,CAnBA;IAoBA;IACAC,WArBA,yBAqBA;MACA;MACA;IACA,CAxBA;IAyBA;IACAC,mBA1BA,+BA0BAC,GA1BA,EA0BA;MACA;MACA;MACA;IACA,CA9BA;IA+BA;IACAC,UAhCA,sBAgCAC,EAhCA,EAgCA;MACA;MACA;MACA;IACA,CApCA;IAqCA;IACAC,QAtCA,oBAsCAD,EAtCA,EAsCA;MACA;MACA;MACA;IACA,CA1CA;IA2CA;IACAE,YA5CA,wBA4CAF,EA5CA,EA4CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAE,iBADA;;cAAA;gBACAR,IADA;gBAEAS;;gBACA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CApDA;IAqDA;IACAC,aAtDA,yBAsDAJ,EAtDA,EAsDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAI;kBACA;oBACAC,uBADA;oBAEAC,sBAFA;oBAGAC,eAHA;oBAIAC;kBAJA,GAKAC,IALA,CAKA;oBACA;sBACA;oBACA,CAFA,MAEA;sBACA;oBACA;;oBACA;sBACAF,eADA;sBAEAG;oBAFA;kBAIA,CAfA,EAeAC,KAfA,CAeA;oBACA;sBACAJ,YADA;sBAEAG;oBAFA;kBAIA,CApBA;gBAqBA,CAtBA,CADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAwBA;EA9EA;AAvBA","names":["name","components","ProjectDialog","data","dialogFlag","dialogTitle","currentPorjectId","projectData","req","page","size","total","mounted","methods","initProjectList","projectList","resp","showDialog","closeDialog","handleCurrentChange","val","showDetail","id","showEdit","cloneProject","console","deleteProject","confirmButtonText","cancelButtonText","type","center","then","message","catch"],"sourceRoot":"src/views/project","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"project\">\n    <div style=\"height: 50px; text-align: left; width: 100%; margin-top: 20px;\">\n      <el-button type=\"primary\" @click=\"showDialog()\">创建</el-button>\n    </div>\n\n    <div style=\"height: 700px\">\n      <div\n        v-for=\"(item, index) in projectData\"\n        :key=\"index\"\n        class=\"text item\"\n      >\n        <el-col :span=\"7\" class=\"project-card\">\n          <el-card style=\"width: 350px; margin-top:20px\">\n            <div slot=\"header\" class=\"clearfix\">\n              <span>{{ item.name }}</span>\n              <div style=\"float: right\">\n                <el-dropdown>\n                  <span class=\"el-dropdown-link\">\n                    <i class=\"el-icon-setting\" />\n                  </span>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"cloneProject(item.id)\"\n                      >克隆</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"showDetail(item.id)\"\n                      >详情</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"showEdit(item.id)\"\n                      >编辑</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"deleteProject(item.id)\"\n                      >删除</el-button>\n                    </el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </div>\n            </div>\n            {{ item.address }}\n            <img\n              :src=\"item.image\"\n              class=\"image\"\n              style=\"height: 280px; width: 300px\"\n            >\n          </el-card>\n        </el-col>\n      </div>\n    </div>\n    <!--分页-->\n    <div style=\"width: 100%; text-align: right\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :page-size=\"req.size\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n    <!--引入子组件-->\n    <project-dialog\n      v-if=\"dialogFlag\"\n      :title=\"dialogTitle\"\n      :pid=\"currentPorjectId\"\n      @cancel=\"closeDialog\"\n    />\n  </div>\n</template>\n\n<script>\nimport ProjectDialog from './components/projectDialog.vue'\nimport { projectList, deleteProject, cloneProject } from '@/api/projects'\n\nexport default {\n  name: 'Porject',\n  components: {\n    ProjectDialog\n  },\n  data() {\n    return {\n      dialogFlag: false,\n      dialogTitle: 'create',\n      currentPorjectId: 0,\n      projectData: [],\n      req: {\n        page: 1,\n        size: 6\n      },\n      // 分页页数\n      total: 10\n    }\n  },\n  mounted() {\n    // 组件加载的时候 进行调用\n    this.initProjectList()\n  },\n  methods: {\n    async initProjectList() {\n      const resp = await projectList(this.req)\n      if (resp.success === true) {\n        // 处理加载的图片路径\n        for (let i = 0; i < resp.items.length; i++) {\n          resp.items[i].image = '/static/images/' + resp.items[i].image\n        }\n        this.projectData = resp.items\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 展示子组件\n    showDialog() {\n      this.dialogTitle = 'create'\n      this.dialogFlag = true\n    },\n    // 关闭子组件，子组件的closeDialog回调父组件\n    closeDialog() {\n      this.dialogFlag = false\n      this.initProjectList()\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.initProjectList()\n    },\n    // 展示项目详情\n    showDetail(id) {\n      this.currentPorjectId = id\n      this.dialogTitle = 'detail'\n      this.dialogFlag = true\n    },\n    // 编辑项目\n    showEdit(id) {\n      this.currentPorjectId = id\n      this.dialogTitle = 'edit'\n      this.dialogFlag = true\n    },\n    // 克隆项目\n    async cloneProject(id) {\n      const resp = await cloneProject(id)\n      console.info('克隆项目')\n      if (resp.success === true) {\n        this.$message.success('项目克隆成功！')\n      } else {\n        this.$message.error('项目克隆失败！')\n      }\n    },\n    // 删除项目\n    async deleteProject(id) {\n      await deleteProject(id).then((resp) => {\n        this.$confirm('删除任务, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n          center: true\n        }).then(() => {\n          if (resp.success === true) {\n            this.initProjectList()\n          } else {\n            this.$message.error(resp.error.msg)\n          }\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      })\n    }\n  }\n}\n</script>\n"]}]}