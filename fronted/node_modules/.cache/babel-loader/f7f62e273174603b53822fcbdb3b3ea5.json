{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/test-framework-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/front/src/views/project/components/projectDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/front/src/views/project/components/projectDialog.vue","mtime":1660981626504},{"path":"/Users/lvjing/web-project/test-framework-platform/front/babel.config.js","mtime":1660724590681},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/front/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AAEA;EACAA,qBADA;EAEAC,cAFA;EAGAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CAHA;EAaAE,IAbA,kBAaA;IACA;MACAC,mBADA;MAEAC,aAFA;MAGAC,aAHA;MAIAC;QACAX,QADA;QAEAY,YAFA;QAGAC,eAHA;QAIAC,YAJA;QAKAC;MALA,CAJA;MAWAC;QACAhB,OACA;UAAAiB;UAAAC;UAAAC;QAAA,CADA;MADA,CAXA;MAgBAC,YAhBA;MAgBA;MACAC,YAjBA;MAiBA;MACAC,mBAlBA;MAmBAC;IAnBA;EAqBA,CAnCA;EAoCAC,OApCA,qBAoCA;IACA;MACA;IACA,CAFA,MAEA;MACA;MACA;IACA,CAHA,MAGA;MACA;MACA;IACA;EACA,CA9CA;EA+CAC;IACAC,WADA,yBACA;MACAC;MACA;IACA,CAJA;IAKA;IACAC,iBANA,+BAMA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,qBADA;;cAAA;gBACAC,IADA;gBAEAH;;gBACA;kBACA;;kBACA;oBACA3B,qBADA;oBAEA+B;kBAFA;;kBAIA;;kBACA;gBACA,CARA,MAQA;kBACA;gBACA;;cAbA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CApBA;IAqBA;IACAC,aAtBA,yBAsBAC,QAtBA,EAsBA;MAAA;;MACA;QACA;UACA;YACAC;cACA;gBACA;gBACA;;gBACA;cACA,CAJA,MAIA;gBACA;cACA;YACA,CARA;UASA,CAVA,MAUA;YACAC;cACA;gBACA;;gBACA;cACA,CAHA,MAGA;gBACA;cACA;YACA,CAPA;UAQA;QACA,CArBA,MAqBA;UACA;QACA;MACA,CAzBA;IA0BA,CAjDA;IAkDA;IACAC,YAnDA,wBAmDAC,IAnDA,EAmDA;MACAV;IACA,CArDA;IAsDA;IACAW,aAvDA,yBAuDAD,IAvDA,EAuDAjB,QAvDA,EAuDA;MACAO;MACA;MACA;IACA,CA3DA;IA4DA;IACAY,YA7DA,wBA6DAF,IA7DA,EA6DA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAV;gBACAa,EAFA,GAEA,cAFA;gBAGAA;gBAHA;gBAAA,OAIAC,eAJA;;cAAA;gBAIAX,IAJA;gBAKAH;;gBACA;kBACA;kBACA,0CAFA,CAGA;;kBACAe,SAJA,GAIA,kCAJA;;kBAKA;oBACA1C,eADA;oBAEA+B;kBAFA;;kBAIA;gBACA,CAVA,MAUA;kBACAJ;;kBACA;gBACA;;cAnBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAoBA;EAjFA;AA/CA","names":["name","components","props","title","type","default","pid","data","dialogVisible","showTitle","updateURL","projectForm","git_name","git_address","describe","image","rules","required","message","trigger","fileList","imageUrl","imageVisible","disabled","mounted","methods","closeDialog","console","initProjectDetail","getProject","resp","url","submitProject","formName","createProject","updateProject","handleRemove","file","handlePreview","beforeUpload","fb","updateImage","imagePath"],"sourceRoot":"src/views/project/components","sources":["projectDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      v-if=\"title == 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">{{\n        projectForm.name\n      }}</el-form-item>\n      <el-form-item\n        label=\"Git项目名称\"\n        prop=\"git_name\"\n      >{{ projectForm.git_name }}\n      </el-form-item>\n      <el-form-item\n        label=\"Git项目地址\"\n        prop=\"git_address\"\n      >{{ projectForm.git_address }}\n      </el-form-item>\n      <el-form-item\n        label=\"项目描述\"\n        prop=\"desc\"\n      >{{ projectForm.describe }}\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"image\">\n        <div id=\"image\">\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"imageUrl\"\n          />\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    <el-form\n      v-if=\"title != 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">\n        <el-input v-model=\"projectForm.name\" />\n      </el-form-item>\n      <el-form-item label=\"Git项目名称\" prop=\"git_name\">\n        <el-input v-model=\"projectForm.git_name\" />\n      </el-form-item>\n      <el-form-item label=\"Git项目地址\" prop=\"git_address\">\n        <el-input v-model=\"projectForm.git_address\" />\n      </el-form-item>\n      <el-form-item label=\"项目描述\" prop=\"desc\">\n        <el-input v-model=\"projectForm.describe\" type=\"textarea\" />\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"desc\">\n        <div id=\"image\">\n          <el-upload\n            action=\"#\"\n            :before-upload=\"beforeUpload\"\n            list-type=\"picture-card\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n          <el-dialog :visible.sync=\"imageVisible\">\n            <img width=\"100%\" :src=\"imageUrl\" alt=\"\">\n          </el-dialog>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"submitProject('ruleForm')\"\n        >确定</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n<script>\nimport { getProject, createProject, updateProject, updateImage } from '@/api/projects'\n\nexport default {\n  name: 'PorjectDialog',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      dialogVisible: true,\n      showTitle: '',\n      updateURL: '',\n      projectForm: {\n        name: '',\n        git_name: '',\n        git_address: '',\n        describe: '',\n        image: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入项目的名称', trigger: 'blur' }\n        ]\n      },\n      fileList: [], // 现有图片列表\n      imageUrl: '', // 图片路径\n      imageVisible: false,\n      disabled: false\n    }\n  },\n  mounted() {\n    if (this.title === 'create') {\n      this.showTitle = '创建项目'\n    } else if (this.title === 'detail') {\n      this.showTitle = '项目详情'\n      this.initProjectDetail()\n    } else if (this.title === 'edit') {\n      this.showTitle = '编辑项目'\n      this.initProjectDetail()\n    }\n  },\n  methods: {\n    closeDialog() {\n      console.log('closeDialog')\n      this.$emit('cancel', {})\n    },\n    // 查询项目详情\n    async initProjectDetail() {\n      const resp = await getProject(this.pid)\n      console.log('project info', resp)\n      if (resp.success === true) {\n        this.projectForm = resp.data\n        this.fileList.push({\n          name: resp.data.image,\n          url: 'static/images/' + resp.data.image\n        })\n        this.imageUrl = 'static/images/' + resp.data.image\n        this.$message.success('项目详情成功！')\n      } else {\n        this.$message.error('项目详情失败！')\n      }\n    },\n    // 创建项目\n    submitProject(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.title === 'create') {\n            createProject(this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                // 创建成功，关闭弹窗\n                this.closeDialog()\n                this.$message.success('项目创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateProject(this.pid, this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('项目编辑成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    // 删除图片\n    handleRemove(file) {\n      console.log('删除', file)\n    },\n    // 预览图片\n    handlePreview(file, fileList) {\n      console.log('上传成功', file, fileList)\n      this.imageUrl = file.url\n      this.imageVisible = true\n    },\n    // 上传文件\n    async beforeUpload(file) {\n      console.log('上传文件对象', file)\n      const fb = new FormData()\n      fb.append('file', file)\n      const resp = await updateImage(fb)\n      console.log('resp-->', resp)\n      if (resp.success === true) {\n        // 获取文件名\n        this.projectForm.image = resp.data.name\n        // 拼接静态文件路径，用于图片展示\n        const imagePath = '/static/images/' + resp.data.name\n        this.fileList.push({\n          name: file.name,\n          url: imagePath\n        })\n        this.$message.success('上传成功！')\n      } else {\n        console.log('上传失败', resp)\n        this.$message.error(resp.error.message)\n      }\n    }\n  }\n}\n</script>\n"]}]}