{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/index.vue","mtime":1662450126116},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/babel.config.js","mtime":1660724590681},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2x2amluZy93ZWItcHJvamVjdC90ZXN0LWZyYW1ld29yay1wbGF0Zm9ybS9mcm9udGVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2x2amluZy93ZWItcHJvamVjdC90ZXN0LWZyYW1ld29yay1wbGF0Zm9ybS9mcm9udGVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFByb2plY3REaWFsb2cgZnJvbSAnLi9jb21wb25lbnRzL3Byb2plY3REaWFsb2cudnVlJzsKaW1wb3J0IHsgcHJvamVjdExpc3QsIGRlbGV0ZVByb2plY3QgYXMgX2RlbGV0ZVByb2plY3QsIGNsb25lUHJvamVjdCBhcyBfY2xvbmVQcm9qZWN0IH0gZnJvbSAnQC9hcGkvcHJvamVjdHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1BvcmplY3QnLAogIGNvbXBvbmVudHM6IHsKICAgIFByb2plY3REaWFsb2c6IFByb2plY3REaWFsb2cKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaWFsb2dGbGFnOiBmYWxzZSwKICAgICAgZGlhbG9nVGl0bGU6ICdjcmVhdGUnLAogICAgICBjdXJyZW50UG9yamVjdElkOiAwLAogICAgICBwcm9qZWN0RGF0YTogW10sCiAgICAgIHJlcTogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgc2l6ZTogNgogICAgICB9LAogICAgICAvLyDliIbpobXpobXmlbAKICAgICAgdG90YWw6IDEwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIOe7hOS7tuWKoOi9veeahOaXtuWAmSDov5vooYzosIPnlKgKICAgIHRoaXMuaW5pdFByb2plY3RMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0UHJvamVjdExpc3Q6IGZ1bmN0aW9uIGluaXRQcm9qZWN0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3AsIGk7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcHJvamVjdExpc3QoX3RoaXMucmVxKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAvLyDlpITnkIbliqDovb3nmoTlm77niYfot6/lvoQKICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHJlc3AuaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICByZXNwLml0ZW1zW2ldLmltYWdlID0gJy9zdGF0aWMvaW1hZ2VzLycgKyByZXNwLml0ZW1zW2ldLmltYWdlOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBfdGhpcy5wcm9qZWN0RGF0YSA9IHJlc3AuaXRlbXM7CiAgICAgICAgICAgICAgICAgIF90aGlzLnRvdGFsID0gcmVzcC50b3RhbDsgLy8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmn6Xor6LmiJDlip/vvIEnKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+afpeivouWksei0pe+8gScpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5bGV56S65a2Q57uE5Lu2CiAgICBzaG93RGlhbG9nOiBmdW5jdGlvbiBzaG93RGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ2NyZWF0ZSc7CiAgICAgIHRoaXMuZGlhbG9nRmxhZyA9IHRydWU7CiAgICB9LAogICAgLy8g5YWz6Zet5a2Q57uE5Lu277yM5a2Q57uE5Lu255qEY2xvc2VEaWFsb2flm57osIPniLbnu4Tku7YKICAgIGNsb3NlRGlhbG9nOiBmdW5jdGlvbiBjbG9zZURpYWxvZygpIHsKICAgICAgdGhpcy5kaWFsb2dGbGFnID0gZmFsc2U7CiAgICAgIHRoaXMuaW5pdFByb2plY3RMaXN0KCk7CiAgICB9LAogICAgLy8g6Lez6L2s5Yiw56ys5Yeg6aG1CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICAvLyBjb25zb2xlLmxvZyhg5b2T5YmN6aG1OiAke3ZhbH1gKQogICAgICB0aGlzLnJlcS5wYWdlID0gdmFsOwogICAgICB0aGlzLmluaXRQcm9qZWN0TGlzdCgpOwogICAgfSwKICAgIC8vIOWxleekuumhueebruivpuaDhQogICAgc2hvd0RldGFpbDogZnVuY3Rpb24gc2hvd0RldGFpbChpZCkgewogICAgICB0aGlzLmN1cnJlbnRQb3JqZWN0SWQgPSBpZDsKICAgICAgdGhpcy5kaWFsb2dUaXRsZSA9ICdkZXRhaWwnOwogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSB0cnVlOwogICAgfSwKICAgIC8vIOe8lui+kemhueebrgogICAgc2hvd0VkaXQ6IGZ1bmN0aW9uIHNob3dFZGl0KGlkKSB7CiAgICAgIHRoaXMuY3VycmVudFBvcmplY3RJZCA9IGlkOwogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ2VkaXQnOwogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSB0cnVlOwogICAgfSwKICAgIC8vIOWFi+mahumhueebrgogICAgY2xvbmVQcm9qZWN0OiBmdW5jdGlvbiBjbG9uZVByb2plY3QoaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzcDsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jbG9uZVByb2plY3QoaWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oJ+WFi+mahumhueebricpOwoKICAgICAgICAgICAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mhueebruWFi+mahuaIkOWKn++8gScpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCfpobnnm67lhYvpmoblpLHotKXvvIEnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5Yig6Zmk6aG555uuCiAgICBkZWxldGVQcm9qZWN0OiBmdW5jdGlvbiBkZWxldGVQcm9qZWN0KGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfZGVsZXRlUHJvamVjdChpZCkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgICAgICAgICAgICBfdGhpczMuJGNvbmZpcm0oJ+WIoOmZpOS7u+WKoSwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IHRydWUKICAgICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmluaXRQcm9qZWN0TGlzdCgpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tc2cpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfliKDpmaTmiJDlip8hJwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICflt7Llj5bmtojliKDpmaQnCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AAEA;EACAA,eADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,iBADA;MAEAC,qBAFA;MAGAC,mBAHA;MAIAC,eAJA;MAKAC;QACAC,OADA;QAEAC;MAFA,CALA;MASA;MACAC;IAVA;EAYA,CAlBA;EAmBAC,OAnBA,qBAmBA;IACA;IACA;EACA,CAtBA;EAuBAC;IACAC,eADA,6BACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,sBADA;;cAAA;gBACAC,IADA;;gBAEA;kBACA;kBACA;oBACAA;kBACA;;kBACA;kBACA,yBANA,CAOA;gBACA,CARA,MAQA;kBACA;gBACA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAdA;IAeA;IACAC,UAhBA,wBAgBA;MACA;MACA;IACA,CAnBA;IAoBA;IACAC,WArBA,yBAqBA;MACA;MACA;IACA,CAxBA;IAyBA;IACAC,mBA1BA,+BA0BAC,GA1BA,EA0BA;MACA;MACA;MACA;IACA,CA9BA;IA+BA;IACAC,UAhCA,sBAgCAC,EAhCA,EAgCA;MACA;MACA;MACA;IACA,CApCA;IAqCA;IACAC,QAtCA,oBAsCAD,EAtCA,EAsCA;MACA;MACA;MACA;IACA,CA1CA;IA2CA;IACAE,YA5CA,wBA4CAF,EA5CA,EA4CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAE,iBADA;;cAAA;gBACAR,IADA;gBAEAS;;gBACA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CApDA;IAqDA;IACAC,aAtDA,yBAsDAJ,EAtDA,EAsDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAI;kBACA;oBACAC,uBADA;oBAEAC,sBAFA;oBAGAC,eAHA;oBAIAC;kBAJA,GAKAC,IALA,CAKA;oBACA;sBACA;oBACA,CAFA,MAEA;sBACA;oBACA;;oBACA;sBACAF,eADA;sBAEAG;oBAFA;kBAIA,CAfA,EAeAC,KAfA,CAeA;oBACA;sBACAJ,YADA;sBAEAG;oBAFA;kBAIA,CApBA;gBAqBA,CAtBA,CADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAwBA;EA9EA;AAvBA","names":["name","components","ProjectDialog","data","dialogFlag","dialogTitle","currentPorjectId","projectData","req","page","size","total","mounted","methods","initProjectList","projectList","resp","showDialog","closeDialog","handleCurrentChange","val","showDetail","id","showEdit","cloneProject","console","deleteProject","confirmButtonText","cancelButtonText","type","center","then","message","catch"],"sourceRoot":"src/views/project","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"project\">\n    <div style=\"height: 50px; text-align: left; width: 100%; margin-top: 20px;\">\n      <el-button type=\"primary\" @click=\"showDialog()\">创建</el-button>\n    </div>\n\n    <div style=\"height: 700px\">\n      <div\n        v-for=\"(item, index) in projectData\"\n        :key=\"index\"\n        class=\"text item\"\n      >\n        <el-col :span=\"7\" class=\"project-card\">\n          <el-card style=\"width: 350px; margin-top:20px\">\n            <div slot=\"header\" class=\"clearfix\">\n              <span>{{ item.name }}</span>\n              <div style=\"float: right\">\n                <el-dropdown>\n                  <span class=\"el-dropdown-link\">\n                    <i class=\"el-icon-setting\" />\n                  </span>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"cloneProject(item.id)\"\n                      >克隆</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"showDetail(item.id)\"\n                      >详情</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"showEdit(item.id)\"\n                      >编辑</el-button>\n                    </el-dropdown-item>\n                    <el-dropdown-item>\n                      <el-button\n                        type=\"text\"\n                        @click=\"deleteProject(item.id)\"\n                      >删除</el-button>\n                    </el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </div>\n            </div>\n            {{ item.address }}\n            <img\n              :src=\"item.image\"\n              class=\"image\"\n              style=\"height: 235px; width: 310px\"\n            >\n          </el-card>\n        </el-col>\n      </div>\n    </div>\n    <!--分页-->\n    <div style=\"width: 100%; text-align: right\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :page-size=\"req.size\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n    <!--引入子组件-->\n    <project-dialog\n      v-if=\"dialogFlag\"\n      :title=\"dialogTitle\"\n      :pid=\"currentPorjectId\"\n      @cancel=\"closeDialog\"\n    />\n  </div>\n</template>\n\n<script>\nimport ProjectDialog from './components/projectDialog.vue'\nimport { projectList, deleteProject, cloneProject } from '@/api/projects'\n\nexport default {\n  name: 'Porject',\n  components: {\n    ProjectDialog\n  },\n  data() {\n    return {\n      dialogFlag: false,\n      dialogTitle: 'create',\n      currentPorjectId: 0,\n      projectData: [],\n      req: {\n        page: 1,\n        size: 6\n      },\n      // 分页页数\n      total: 10\n    }\n  },\n  mounted() {\n    // 组件加载的时候 进行调用\n    this.initProjectList()\n  },\n  methods: {\n    async initProjectList() {\n      const resp = await projectList(this.req)\n      if (resp.success === true) {\n        // 处理加载的图片路径\n        for (let i = 0; i < resp.items.length; i++) {\n          resp.items[i].image = '/static/images/' + resp.items[i].image\n        }\n        this.projectData = resp.items\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 展示子组件\n    showDialog() {\n      this.dialogTitle = 'create'\n      this.dialogFlag = true\n    },\n    // 关闭子组件，子组件的closeDialog回调父组件\n    closeDialog() {\n      this.dialogFlag = false\n      this.initProjectList()\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.initProjectList()\n    },\n    // 展示项目详情\n    showDetail(id) {\n      this.currentPorjectId = id\n      this.dialogTitle = 'detail'\n      this.dialogFlag = true\n    },\n    // 编辑项目\n    showEdit(id) {\n      this.currentPorjectId = id\n      this.dialogTitle = 'edit'\n      this.dialogFlag = true\n    },\n    // 克隆项目\n    async cloneProject(id) {\n      const resp = await cloneProject(id)\n      console.info('克隆项目')\n      if (resp.success === true) {\n        this.$message.success('项目克隆成功！')\n      } else {\n        this.$message.error('项目克隆失败！')\n      }\n    },\n    // 删除项目\n    async deleteProject(id) {\n      await deleteProject(id).then((resp) => {\n        this.$confirm('删除任务, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n          center: true\n        }).then(() => {\n          if (resp.success === true) {\n            this.initProjectList()\n          } else {\n            this.$message.error(resp.error.msg)\n          }\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      })\n    }\n  }\n}\n</script>\n"]}]}