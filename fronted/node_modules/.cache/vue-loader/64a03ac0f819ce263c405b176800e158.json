{"remainingRequest":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/components/projectDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/src/views/project/components/projectDialog.vue","mtime":1660982573326},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/babel-loader/lib/index.js","mtime":1660878615043},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/cache-loader/dist/cjs.js","mtime":1660878614315},{"path":"/Users/lvjing/web-project/test-framework-platform/fronted/node_modules/vue-loader/lib/index.js","mtime":1660878615769}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFByb2plY3QsIGNyZWF0ZVByb2plY3QsIHVwZGF0ZVByb2plY3QsIHVwZGF0ZUltYWdlIH0gZnJvbSAnQC9hcGkvcHJvamVjdHMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1BvcmplY3REaWFsb2cnLAogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiB7CiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBwaWQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nVmlzaWJsZTogdHJ1ZSwKICAgICAgc2hvd1RpdGxlOiAnJywKICAgICAgdXBkYXRlVVJMOiAnJywKICAgICAgcHJvamVjdEZvcm06IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBnaXRfbmFtZTogJycsCiAgICAgICAgZ2l0X2FkZHJlc3M6ICcnLAogICAgICAgIGRlc2NyaWJlOiAnJywKICAgICAgICBpbWFnZTogJycKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl6aG555uu55qE5ZCN56ewJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIGZpbGVMaXN0OiBbXSwgLy8g546w5pyJ5Zu+54mH5YiX6KGoCiAgICAgIGltYWdlVXJsOiAnJywgLy8g5Zu+54mH6Lev5b6ECiAgICAgIGltYWdlVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpc2FibGVkOiBmYWxzZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnRpdGxlID09PSAnY3JlYXRlJykgewogICAgICB0aGlzLnNob3dUaXRsZSA9ICfliJvlu7rpobnnm64nCiAgICB9IGVsc2UgaWYgKHRoaXMudGl0bGUgPT09ICdkZXRhaWwnKSB7CiAgICAgIHRoaXMuc2hvd1RpdGxlID0gJ+mhueebruivpuaDhScKICAgICAgdGhpcy5pbml0UHJvamVjdERldGFpbCgpCiAgICB9IGVsc2UgaWYgKHRoaXMudGl0bGUgPT09ICdlZGl0JykgewogICAgICB0aGlzLnNob3dUaXRsZSA9ICfnvJbovpHpobnnm64nCiAgICAgIHRoaXMuaW5pdFByb2plY3REZXRhaWwoKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2xvc2VEaWFsb2coKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjbG9zZURpYWxvZycpCiAgICAgIHRoaXMuJGVtaXQoJ2NhbmNlbCcsIHt9KQogICAgfSwKICAgIC8vIOafpeivoumhueebruivpuaDhQogICAgYXN5bmMgaW5pdFByb2plY3REZXRhaWwoKSB7CiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBnZXRQcm9qZWN0KHRoaXMucGlkKQogICAgICBjb25zb2xlLmxvZygncHJvamVjdCBpbmZvJywgcmVzcCkKICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMucHJvamVjdEZvcm0gPSByZXNwLmRhdGEKICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goewogICAgICAgICAgbmFtZTogcmVzcC5kYXRhLmltYWdlLAogICAgICAgICAgdXJsOiAnc3RhdGljL2ltYWdlcy8nICsgcmVzcC5kYXRhLmltYWdlCiAgICAgICAgfSkKICAgICAgICB0aGlzLmltYWdlVXJsID0gJ3N0YXRpYy9pbWFnZXMvJyArIHJlc3AuZGF0YS5pbWFnZQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu6K+m5oOF5oiQ5Yqf77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfpobnnm67or6bmg4XlpLHotKXvvIEnKQogICAgICB9CiAgICB9LAogICAgLy8g5Yib5bu66aG555uuCiAgICBzdWJtaXRQcm9qZWN0KGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMudGl0bGUgPT09ICdjcmVhdGUnKSB7CiAgICAgICAgICAgIGNyZWF0ZVByb2plY3QodGhpcy5wcm9qZWN0Rm9ybSkudGhlbigocmVzcCkgPT4gewogICAgICAgICAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIC8vIOWIm+W7uuaIkOWKn++8jOWFs+mXreW8ueeqlwogICAgICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZygpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mhueebruWIm+W7uuaIkOWKn++8gScpCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgICAgIHVwZGF0ZVByb2plY3QodGhpcy5waWQsIHRoaXMucHJvamVjdEZvcm0pLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKCkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu57yW6L6R5oiQ5Yqf77yBJykKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1lc3NhZ2UpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g5Yig6Zmk5Zu+54mHCiAgICBoYW5kbGVSZW1vdmUoZmlsZSkgewogICAgICBjb25zb2xlLmxvZygn5Yig6ZmkJywgZmlsZSkKICAgIH0sCiAgICAvLyDpooTop4jlm77niYcKICAgIGhhbmRsZVByZXZpZXcoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgY29uc29sZS5sb2coJ+S4iuS8oOaIkOWKnycsIGZpbGUsIGZpbGVMaXN0KQogICAgICB0aGlzLmltYWdlVXJsID0gZmlsZS51cmwKICAgICAgdGhpcy5pbWFnZVZpc2libGUgPSB0cnVlCiAgICB9LAogICAgLy8g5LiK5Lyg5paH5Lu2CiAgICBhc3luYyBiZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICBjb25zb2xlLmxvZygn5LiK5Lyg5paH5Lu25a+56LGhJywgZmlsZSkKICAgICAgY29uc3QgZmIgPSBuZXcgRm9ybURhdGEoKQogICAgICBmYi5hcHBlbmQoJ2ZpbGUnLCBmaWxlKQogICAgICBjb25zdCByZXNwID0gYXdhaXQgdXBkYXRlSW1hZ2UoZmIpCiAgICAgIGNvbnNvbGUubG9nKCdyZXNwLS0+JywgcmVzcCkKICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgIC8vIOiOt+WPluaWh+S7tuWQjQogICAgICAgIHRoaXMucHJvamVjdEZvcm0uaW1hZ2UgPSByZXNwLmRhdGEubmFtZQogICAgICAgIC8vIOaLvOaOpemdmeaAgeaWh+S7tui3r+W+hO+8jOeUqOS6juWbvueJh+WxleekugogICAgICAgIGNvbnN0IGltYWdlUGF0aCA9ICcvc3RhdGljL2ltYWdlcy8nICsgcmVzcC5kYXRhLm5hbWUKICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goewogICAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgICAgdXJsOiBpbWFnZVBhdGgKICAgICAgICB9KQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5LiK5Lyg5oiQ5Yqf77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygn5LiK5Lyg5aSx6LSlJywgcmVzcCkKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["projectDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"projectDialog.vue","sourceRoot":"src/views/project/components","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      v-if=\"title == 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">{{\n        projectForm.name\n      }}</el-form-item>\n      <el-form-item\n        label=\"Git项目名称\"\n        prop=\"git_name\"\n      >{{ projectForm.git_name }}\n      </el-form-item>\n      <el-form-item\n        label=\"Git项目地址\"\n        prop=\"git_address\"\n      >{{ projectForm.git_address }}\n      </el-form-item>\n      <el-form-item\n        label=\"项目描述\"\n        prop=\"desc\"\n      >{{ projectForm.describe }}\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"image\">\n        <div id=\"image\">\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"imageUrl\"\n          />\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    <el-form\n      v-if=\"title != 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">\n        <el-input v-model=\"projectForm.name\" />\n      </el-form-item>\n      <el-form-item label=\"Git项目名称\" prop=\"git_name\">\n        <el-input v-model=\"projectForm.git_name\" />\n      </el-form-item>\n      <el-form-item label=\"Git项目地址\" prop=\"git_address\">\n        <el-input v-model=\"projectForm.git_address\" />\n      </el-form-item>\n      <el-form-item label=\"项目描述\" prop=\"desc\">\n        <el-input v-model=\"projectForm.describe\" type=\"textarea\" />\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"desc\">\n        <div id=\"image\">\n          <el-upload\n            action=\"#\"\n            :before-upload=\"beforeUpload\"\n            list-type=\"picture-card\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n          <el-dialog :visible.sync=\"imageVisible\">\n            <img width=\"100%\" :src=\"imageUrl\" alt=\"\">\n          </el-dialog>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"submitProject('ruleForm')\"\n        >确定</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n<script>\nimport { getProject, createProject, updateProject, updateImage } from '@/api/projects'\n\nexport default {\n  name: 'PorjectDialog',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      dialogVisible: true,\n      showTitle: '',\n      updateURL: '',\n      projectForm: {\n        name: '',\n        git_name: '',\n        git_address: '',\n        describe: '',\n        image: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入项目的名称', trigger: 'blur' }\n        ]\n      },\n      fileList: [], // 现有图片列表\n      imageUrl: '', // 图片路径\n      imageVisible: false,\n      disabled: false\n    }\n  },\n  mounted() {\n    if (this.title === 'create') {\n      this.showTitle = '创建项目'\n    } else if (this.title === 'detail') {\n      this.showTitle = '项目详情'\n      this.initProjectDetail()\n    } else if (this.title === 'edit') {\n      this.showTitle = '编辑项目'\n      this.initProjectDetail()\n    }\n  },\n  methods: {\n    closeDialog() {\n      console.log('closeDialog')\n      this.$emit('cancel', {})\n    },\n    // 查询项目详情\n    async initProjectDetail() {\n      const resp = await getProject(this.pid)\n      console.log('project info', resp)\n      if (resp.success === true) {\n        this.projectForm = resp.data\n        this.fileList.push({\n          name: resp.data.image,\n          url: 'static/images/' + resp.data.image\n        })\n        this.imageUrl = 'static/images/' + resp.data.image\n        this.$message.success('项目详情成功！')\n      } else {\n        this.$message.error('项目详情失败！')\n      }\n    },\n    // 创建项目\n    submitProject(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.title === 'create') {\n            createProject(this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                // 创建成功，关闭弹窗\n                this.closeDialog()\n                this.$message.success('项目创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateProject(this.pid, this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('项目编辑成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    // 删除图片\n    handleRemove(file) {\n      console.log('删除', file)\n    },\n    // 预览图片\n    handlePreview(file, fileList) {\n      console.log('上传成功', file, fileList)\n      this.imageUrl = file.url\n      this.imageVisible = true\n    },\n    // 上传文件\n    async beforeUpload(file) {\n      console.log('上传文件对象', file)\n      const fb = new FormData()\n      fb.append('file', file)\n      const resp = await updateImage(fb)\n      console.log('resp-->', resp)\n      if (resp.success === true) {\n        // 获取文件名\n        this.projectForm.image = resp.data.name\n        // 拼接静态文件路径，用于图片展示\n        const imagePath = '/static/images/' + resp.data.name\n        this.fileList.push({\n          name: file.name,\n          url: imagePath\n        })\n        this.$message.success('上传成功！')\n      } else {\n        console.log('上传失败', resp)\n        this.$message.error(resp.error.message)\n      }\n    }\n  }\n}\n</script>\n"]}]}